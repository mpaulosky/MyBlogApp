
@inherits ErrorBoundaryBase

<header
	class=@($"container flex items-center justify-between max-w-7xl px-6 py-2 mx-auto rounded-b-mdxl:max-w-5xl border-b border-blue-700 shadow-md {ShadowStyle}")>
	<h1 class=@($"text-6xl font-bold mb-4 {TextColor}")>@GetErrorTitle(ErrorCode)</h1>
	<p class=@($"text-xl mb-6 {TextColor}")>@GetErrorMessage(ErrorCode)</p>
	<a href="/" class="p-1 hover:text-blue-700">Go Home</a>
</header>

@code {

	/// <summary>
	///   The error code to display.(e.g., 401, 403, 404, 500).
	/// </summary>
	[Parameter]
	public int ErrorCode { get; set; }

	/// <summary>
	///   The error title to display.
	/// </summary>
	[Parameter]
	public string? ErrorMessage { get; set; }

	/// <summary>
	///   The shadow color for the error card.
	/// </summary>
	[Parameter]
	public string ShadowStyle { get; set; } = "shadow-red-500";

	/// <summary>
	///   The text color for the error message.
	/// </summary>
	[Parameter]
	public string TextColor { get; set; } = "red-600";

	/// <summary>
	///   Returns the error title based on the error code.
	/// </summary>
	/// <param name="errorCode">Error code</param>
	/// <returns>Error title</returns>
	private string GetErrorTitle(int errorCode)
	{
		return errorCode switch
		{
			401 => "401 Unauthorized",
			403 => "403 Forbidden",
			404 => "404 Not Found",
			500 => "500 Internal Server Error",
			_ => $"{ErrorMessage ?? "Unknown"} Error"
		};
	}

	/// <summary>
	///   Returns the error message based on the error code.
	/// </summary>
	/// <param name="errorCode">Error code</param>
	/// <returns>Error message</returns>
	private static string GetErrorMessage(int errorCode)
	{
		return errorCode switch
		{
			401 => "You are not authorized to view this page.",
			403 => "Access to this resource is forbidden. You are not authorized to access this. You need to be logged in to view Articles. You need to be an admin to manage the Articles and Categories. You need to be an admin or Author to create new Articles.",
			404 => "The page you are looking for does not exist.",
			500 => "An unexpected error occured on the server.",
			_ => "An error occurred. Please try again later."
		};
	}

	/// <summary>
	///   Handles errors from ErrorBoundaryBase.
	/// </summary>
	/// <param name="exception">The exception thrown.</param>
	protected override Task OnErrorAsync(Exception exception)
	{
		ErrorCode = 500;
		ErrorMessage = exception.Message;

		return Task.CompletedTask;
	}

	// ErrorBoundaryBase does not define OnErrorAsync. Remove this override.

}