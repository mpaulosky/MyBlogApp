# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Test .NET projects

on:
  push:
    paths-ignore:
      - "**/*.docs"
      - "**/*.md"
      - "**/*.gitignore"
      - "**/*.gitattributes"

  workflow_dispatch:
    inputs:
      reason:
        description: "The reason for running the workflow"
        required: true
        default: "Manual run"

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: |
            **/Web/package-lock.json

      - name: Install Node.js dependencies
        working-directory: Web
        run: npm install

      - name: Ensure Tailwind CLI is executable
        working-directory: Web
        run: chmod +x ./node_modules/.bin/tailwindcss

      - name: Build Tailwind CSS
        working-directory: Web
        run: npm run build:css

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Run all tests in all test projects
        run: |
          for proj in $(find . -name "*.csproj" -path "*/[Tt]ests/*"); do
            echo "Project: $proj"
            name=$(basename "$proj" .csproj)
            echo "Running tests in $name"
            dotnet run --project "$proj" --no-build --no-restore --report-trx --report-trx-filename "$name.trx" --results-directory "TestResults"
          done

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: MyBlogApp-Test-Results
          path: TestResults

      - name: Codecov
        uses: codecov/codecov-action@v5.4.3

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: TestResults/*.trx

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        id: test-results
        if: always()
        with:
          files: |
            TestResults/**/*.trx

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.1.0
        with:
          versionSpec: "6.x"

      - name: Use GitVersion
        id: gitversion # step id used as a reference for output values
        uses: gittools/actions/gitversion/execute@v4.1.0

      - run: |
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"